{"version":3,"sources":["constants.js","reduxUtils.js","components/Widgets.js","services/client/ml-studio-api.js","components/Dashboard.js","components/Container.js","components/ContentContainer.js","App.js","serviceWorker.js","registerServiceWorker.js","index.js"],"names":["NAVBAR_ITEMS","ICON","NAME","PATH","WIDGET_ITEMS_DASHBOARD","COLOR","VALUE","KEY","FORMAT","ENDPOINTS","url","current_data","ACTION_AUTHENTICATION","ACTION_EXPERIMENTS_CHANGE","ACTION_LOGOUT","INITIAL_STATE","user","currentProject","statusCode","isAuthenticated","experiments","reduceFct","state","arguments","length","undefined","action","type","Object","assign","project","currentProjectId","code","isAdmin","objectSpread","mapStateToProps","Widget","color","classes","this","props","displayedValue","value","react_default","a","createElement","index_es","className","progress","size","classNameInfoBox","path","classNames","formatClassNameInfoBox","pointerCursor","widgetContent","Icon_default","iconStyles","icon","Typography_default","text","variant","name","Grid_default","item","xs","sm","md","colSize","lg","react_router_dom","to","link","Component","Widgets","_this","data","oWidgets","map","Widgets_Widget","key","container","spacing","withStyles","theme","fontSize","position","top","marginTop","textDecoration","cursor","getCurrentData","fetch","method","headers","Content-Type","accept","then","response","json","Dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","cookies","textFieldValue","widgetdata","Constants","bind","assertThisInitialized","updateData","_this2","StudioApi","stats","forEach","element","console","log","root","Paper_default","center","paper","ButtonBase_default","image","img","alt","src","direction","gutterBottom","style","withCookies","flexGrow","margin","unit","padding","textAlign","palette","secondary","tiles","width","Container","components_Widgets","ContentContainer","react_router","exact","render","components_Dashboard","component","connect","App","handleClick","anchorEl","currentTarget","handleClose","AppBar_default","Toolbar_default","IconButton_default","menuButton","aria-label","onClick","Menu_default","core_Menu_default","id","open","Boolean","onClose","ListItem_default","Link","button","ListItemIcon_default","ListItemText_default","disableTypography","title","noWrap","grow","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","components_ContentContainer","withRouter","marginLeft","marginRight","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","common","white","&:hover","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","grid","window","location","hostname","match","isLocalhost","register","navigator","URL","process","origin","addEventListener","swUrl","concat","status","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","confirm","error","store","redux","ReduxUtils","__REDUX_DEVTOOLS_EXTENSION__","registerServiceWorker","configure","ReactDOM","es","es6","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0f006d21.chunk.js","sourcesContent":["const NAVBAR_ITEMS = [\n    {\n        ICON: \"home\",\n        NAME: \"Dashboard\",\n        PATH: \"/dashboard\"\n      },\n    {\n        ICON: \"crop_original\",\n        NAME: \"Container 1\",\n        PATH: \"/container\"\n      },\n\n];\n\nconst WIDGET_ITEMS_DASHBOARD = [\n  {\n    COLOR: \"light-green\",\n    ICON: \"opacity\",\n    NAME: \"Current Humidity\",\n    VALUE: \"88%\",\n    KEY: \"current_moisture\",\n    FORMAT: \" %\",\n    PATH: \"/datasets\"\n  },\n  {\n    COLOR: \"cyan\",\n    ICON: \"wb_sunny\",\n    NAME: \"Current Temperature\",\n    VALUE: \"30°C\",\n    KEY: \"current_temp\",\n    FORMAT: \" °C\",\n    PATH: \"/models\"\n  },\n  /**\n  {\n    COLOR: \"pink\",\n    ICON: \"shopping_card\",\n    NAME: \"Current Weight\",\n    VALUE: \"2,3 kg\",\n    KEY: \"experimentsCount\",\n    FORMAT: \"numb\",\n    PATH: \"/experiments\"\n  }**/\n];\n\nconst DEMO_HEADER = \"Insectus BestBugs\"\n\nconst ENDPOINTS = {\n    \"url\":\"http://100.100.148.223:8000\",\n    \"current_data\": \"/current_data\"\n}\n\n\nexport {\n    NAVBAR_ITEMS,\n    WIDGET_ITEMS_DASHBOARD,\n    DEMO_HEADER,\n    ENDPOINTS\n};","const ACTION_AUTHENTICATION = \"AUTHENTICATION\";\nconst ACTION_EXPERIMENTS_CHANGE = \"NEWEXPERIMENTS\";\nconst ACTION_LOGOUT = \"logout\";\n\nconst INITIAL_STATE = {\n  user: \"\",\n  currentProject: \"\",\n  statusCode: \"startApp\",\n  isAuthenticated: false,\n  experiments: {}\n};\n\nfunction reduceFct(state = [], action) {\n  switch (action.type) {\n    case \"CHANGE\":\n      return Object.assign({}, state, {\n        currentProject: action.project,\n        currentProjectId: action.currentProjectId,\n        statusCode: action.code\n      });\n    case ACTION_AUTHENTICATION:\n      return Object.assign({}, state, {\n        user: action.user,\n        isAuthenticated: action.isAuthenticated,\n        isAdmin: action.isAdmin\n      });\n    case ACTION_EXPERIMENTS_CHANGE:\n      return Object.assign({}, state, {\n        experiments: action.experiments\n      });\n    case ACTION_LOGOUT:\n      return Object.assign({}, state, { ...INITIAL_STATE }); // reset the redux state\n    default:\n      return state;\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  currentProject: state.currentProject,\n  currentProjectId: state.currentProjectId,\n  statusCode: state.statusCode,\n  isAuthenticated: state.isAuthenticated,\n  isAdmin: state.isAdmin,\n  experiments: state.experiments\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => {\n      dispatch({\n        type: ACTION_LOGOUT\n      });\n    },\n    onInpChange: projectID => {\n      dispatch({\n        type: \"CHANGE\",\n        project: projectID.target.value,\n        currentProjectId: projectID.target.projectId,\n        code: \"projectSelected\"\n      });\n    },\n    onCreateProject: projectID => {\n      dispatch({\n        type: \"CHANGE\",\n        project: projectID,\n        code: \"projectSelected\"\n      });\n    },\n    onNoProjectsAvailable: () => {\n      dispatch({\n        type: \"CHANGE\",\n        project: \"\",\n        code: \"noProjects\"\n      });\n    },\n    onProjectDelete: newProjectID => {\n      dispatch({\n        type: \"CHANGE\",\n        project: newProjectID,\n        code: \"projectDeleted\"\n      });\n    },\n    onAuthentication: (user, isAuthenticated, isAdmin) => {\n      dispatch({\n        type: ACTION_AUTHENTICATION,\n        user: user,\n        isAuthenticated: isAuthenticated,\n        isAdmin: isAdmin\n      });\n    },\n    onAttributeActivatedChange: experiments => {\n      dispatch({\n        type: ACTION_EXPERIMENTS_CHANGE,\n        experiments: experiments\n      });\n    }\n  };\n};\n\nexport { reduceFct, mapStateToProps, mapDispatchToProps, INITIAL_STATE };\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../widget.css\";\n\nconst styles = theme => ({\n  iconStyles: {\n    fontSize: 50,\n    position: \"relative\",\n    top: \"16px\",\n    color: \"white\"\n  },\n  text: {\n    marginTop: 8,\n    color: \"white\"\n  },\n  value: {\n    color: \"white\"\n    // marginTop: 2 - not needed?\n  },\n  progress: {\n    color: \"white\"\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  pointerCursor: {\n    cursor: \"pointer\"\n  }\n});\n\nclass Widget extends Component {\n  formatClassNameInfoBox(color) {\n    return \"info-box hover-expand-effect bg-\" + color;\n  }\n\n  render() {\n    var { classes } = this.props;\n    var displayedValue = this.props.value;\n    if (displayedValue === \"init\") {\n      displayedValue = (\n        <CircularProgress className={classes.progress} size={30} />\n      );\n    }\n\n    var classNameInfoBox = this.props.path\n      ? classNames(\n          this.formatClassNameInfoBox(this.props.color),\n          classes.pointerCursor\n        )\n      : this.formatClassNameInfoBox(this.props.color);\n\n    var widgetContent = (\n      <div className={classNameInfoBox}>\n        <div className=\"icon\">\n          <Icon className={classes.iconStyles}>{this.props.icon}</Icon>\n        </div>\n        <div className=\"content\">\n          <Typography className={classes.text} variant=\"body1\">\n            {this.props.name}\n          </Typography>\n          <Typography className={classes.value} variant=\"h6\">\n            {displayedValue}\n          </Typography>\n        </div>\n      </div>\n    );\n\n    return (\n      <Grid item xs={12} sm={6} md={this.props.colSize} lg={this.props.colSize}>\n        {this.props.path ? (\n          <Link to={this.props.path} className={classes.link}>\n            {widgetContent}\n          </Link>\n        ) : (\n          widgetContent\n        )}\n      </Grid>\n    );\n  }\n}\n\nclass Widgets extends Component {\n  render() {\n    const data = this.props.data;\n    const colSize = 12 / this.props.data.length <= 3 ? 3 : 4;\n\n    const oWidgets = data.map(item => (\n      <Widget\n        classes={this.props.classes}\n        key={item.NAME}\n        colSize={colSize}\n        color={item.COLOR}\n        icon={item.ICON}\n        name={item.NAME}\n        value={item.VALUE}\n        path={item.PATH}\n      />\n    ));\n    return (\n      <Grid container spacing={24}>\n        {oWidgets}\n      </Grid>\n    );\n  }\n}\n\nWidgets.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(Widgets);","import { ENDPOINTS } from \"../../constants\";\n\nimport { toast } from \"react-toastify\";\n\nfunction getCurrentData() {\n    return fetch(\n        ENDPOINTS.url + ENDPOINTS.current_data,\n         {\n          \"method\": \"GET\",\n          //\"credentials\": \"include\",\n          \"headers\": {\"Content-Type\": \"text/plain\", \"accept\": \"application/json\"},\n          //\"body\": text\n        }).then(response => {\n            return response.json();\n        });\n}\n\n\n  export {\n    getCurrentData\n  }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nimport Widgets from \"./Widgets\";\n/**\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n**/\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport * as StudioApi from \"../services/client/ml-studio-api\";\n\nimport * as Constants from \"../constants\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing.unit * 4,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  center: {\n    marginTop: theme.spacing.unit * 4,\n    padding: theme.spacing.unit * 2\n  },\n  tiles: {\n    width: \"100%\"\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    const { cookies } = this.props;\n\n    this.state = {\n      textFieldValue:\"\",\n      widgetdata: Constants.WIDGET_ITEMS_DASHBOARD\n    };\n\n   // this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateData = this.updateData.bind(this);\n\n    this.updateData();\n  }\n  /**\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this,window);\n    StudioApi.textClassificationCall(this.state.textFieldValue,this.state.limit)\n    .then((data) => {\n      const result = data.data\n      if (result.length > 0) {\n        var ind = 0;\n        result.map(row => {\n\n          row[\"id\"] = ind;\n          row[\"score\"] = Number(row[\"score\"]).toFixed(2);\n          ind += 1;\n        } )\n\n        this.setState({\n          rows: result\n        })\n\n\n      }\n    });\n  }\n  **/\n  updateData(props) {\n\n    StudioApi.getCurrentData()\n    .then((data) => {\n      var stats = data;\n      let widgetdata = this.state.widgetdata;\n\n      widgetdata.forEach(function(element) {\n        element.VALUE = stats[element.KEY] + element.FORMAT;\n      }, this);\n\n      this.setState({\n        widgetdata: widgetdata\n      });\n\n      });\n  }\n\n  reloadData() {\n    this.updateData(this.props);\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    })\n  }\n\n  componentWillReceiveProps(props){\n    console.log(\"hallo\");\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n\n        <div className={classes.root}>\n          <Paper className={classes.center}>\n            <Grid container spacing={24}>\n              <Paper className={classes.paper}>\n                <Grid container spacing={16}>\n                  <Grid item>\n                    <ButtonBase className={classes.image}>\n                      <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n                    </ButtonBase>\n                  </Grid>\n                  <Grid item xs={12} sm container>\n                    <Grid item xs container direction=\"column\" spacing={16}>\n                      <Grid item xs>\n                        <Typography gutterBottom variant=\"subtitle1\">\n                          Standard license\n                        </Typography>\n                        <Typography gutterBottom>Full resolution 1920x1080 • JPEG</Typography>\n                        <Typography color=\"textSecondary\">ID: 1030114</Typography>\n                      </Grid>\n                      <Grid item>\n                        <Typography style={{ cursor: 'pointer' }}>Remove</Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item>\n                      <Typography variant=\"subtitle1\">$19.00</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Paper>\n        </div>\n      </div>\n    );\n  };\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    cookies: PropTypes.instanceOf(Cookies).isRequired,\n  };\n\nexport default withCookies(withStyles(styles)(Dashboard));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nimport Widgets from \"./Widgets\";\n/**\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n**/\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport * as StudioApi from \"../services/client/ml-studio-api\";\n\nimport * as Constants from \"../constants\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing.unit * 4,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  center: {\n    marginTop: theme.spacing.unit * 4,\n    padding: theme.spacing.unit * 2\n  },\n  tiles: {\n    width: \"100%\"\n  }\n});\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    const { cookies } = this.props;\n\n    this.state = {\n      textFieldValue:\"\",\n      widgetdata: Constants.WIDGET_ITEMS_DASHBOARD\n    };\n\n   // this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateData = this.updateData.bind(this);\n\n    this.updateData();\n  }\n  /**\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this,window);\n    StudioApi.textClassificationCall(this.state.textFieldValue,this.state.limit)\n    .then((data) => {\n      const result = data.data\n      if (result.length > 0) {\n        var ind = 0;\n        result.map(row => {\n\n          row[\"id\"] = ind;\n          row[\"score\"] = Number(row[\"score\"]).toFixed(2);\n          ind += 1;\n        } )\n\n        this.setState({\n          rows: result\n        })\n\n\n      }\n    });\n  }\n  **/\n  updateData(props) {\n\n    StudioApi.getCurrentData()\n    .then((data) => {\n      var stats = data;\n      let widgetdata = this.state.widgetdata;\n\n      widgetdata.forEach(function(element) {\n        element.VALUE = stats[element.KEY] + element.FORMAT;\n      }, this);\n\n      this.setState({\n        widgetdata: widgetdata\n      });\n\n      });\n  }\n\n  reloadData() {\n    this.updateData(this.props);\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    })\n  }\n\n  componentWillReceiveProps(props){\n    console.log(\"hallo\");\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n\n        <div className={classes.root}>\n          <Widgets data={this.state.widgetdata} />\n          <Paper className={classes.center}>\n            \n          </Paper>\n        </div>\n      </div>\n    );\n  };\n}\n\nContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    cookies: PropTypes.instanceOf(Cookies).isRequired,\n  };\n\nexport default withCookies(withStyles(styles)(Container));\n","import React, { Component } from \"react\";\nimport { Switch,Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { mapStateToProps } from \"../reduxUtils\";\n\n//scenes\nimport Dashboard from \"./Dashboard\";\nimport Container from \"./Container\";\n\nclass ContentContainer extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact render={()=> <Dashboard />} />\n        <Route path=\"/dashboard\" exact component={Dashboard} /> {/* render={()=> <Text_Classification />} /> */}\n        <Route path=\"/container\" exact component={Container} /> {/* render={()=> <Image_Classification />} /> */}\n      </Switch>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ContentContainer);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport './App.css';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/ListItem';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Link from 'react-router-dom/Link';\n\nimport * as Constants from \"./constants\";\nimport ContentContainer from \"./components/ContentContainer\";\n\nimport { mapStateToProps } from \"./reduxUtils\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport ListItem from '@material-ui/core/ListItem';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n\n  grid: {\n    height: \"90%\"\n  }\n});\n\nclass App extends Component {\n\tconstructor(props) {\n      super(props);\n      \n      this.state = {\n        anchorEl: null,\n      };\n    }\n\n  handleClick = event => {\n      this.setState({ anchorEl: event.currentTarget });\n    };\n\n  handleClose = () => {\n      this.setState({ anchorEl: null });\n    };\n\t\n\n\trender() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n\n\t    return (\n\t      <div className={classes.root}>\n\t      <div>\n\t      <AppBar position=\"static\">\n\t        <Toolbar>\n            <IconButton \n              className={classes.menuButton} \n              color=\"inherit\" \n              aria-label=\"Open menu\"\n              onClick={this.handleClick}>\n\t            <MenuIcon />\n\t          </IconButton>\n            <Menu\n              id=\"demo-menu\"\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={this.handleClose}\n            >\n              {Constants.NAVBAR_ITEMS.map(item => {\n                  console.log(item);\n                  return (<ListItem key={item.NAME} component={Link} to={item.PATH} button onClick={this.handleClose}>\n                    \n                    <ListItemIcon>\n                      <Icon>{item.ICON}</Icon>\n                    </ListItemIcon>\n                  <ListItemText disableTypography >\n                    {item.NAME}\n                  </ListItemText>\n                  </ListItem>);\n              })}\n            </Menu>\n\t          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n\t            {Constants.DEMO_HEADER}\n\t          </Typography>\n\t          <div className={classes.grow} />\n\t          <div className={classes.search}>\n\t            <div className={classes.searchIcon}>\n\t              <SearchIcon />\n\t            </div>\n\t            <InputBase\n\t              placeholder=\"Search…\"\n\t              classes={{\n\t                root: classes.inputRoot,\n\t                input: classes.inputInput,\n\t              }}\n\t            />\n\t          </div>\n\t        </Toolbar>\t\n\t      </AppBar>\n\t      </div>\n        <div>\n          <ContentContainer />\n        </div>\n\t    </div>\n\n      \n    );\n  }\n}\n\n\nApp.propTypes = {\n  cookies: PropTypes.instanceOf(Cookies).isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withCookies(connect(mapStateToProps)(withStyles(styles)(App))));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) { \n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.             \n                if (window.confirm('New update is available, click to restart')) {\n                  window.location.reload()\n                }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\nimport { HashRouter } from \"react-router-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { Provider } from \"react-redux\";\nimport * as redux from \"redux\";\nimport * as ReduxUtils from \"./reduxUtils\";\n  \n\nfunction configure() {\n    let store = redux.createStore(\n        ReduxUtils.reduceFct,\n        ReduxUtils.INITIAL_STATE,\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // allows seeing the Redux Store with this extension: http://extension.remotedev.io/\n    );\n  \n    registerServiceWorker();\n    // if (\"serviceWorker\" in navigator) {\n    //   navigator.serviceWorker\n    //     .register(\"/app/service-worker.js\", {\n    //       scope: \"/app/\"\n    //     })\n    //     .then(function(registration) {\n    //       console.log(\"Registration successful, scope is:\", registration.scope);\n    //     })\n    //     .catch(function(error) {\n    //       console.log(\"Service worker registration failed, error:\", error);\n    //     });\n    //}\n    return store;\n  }\n\nconst store = configure();\n//Allows access to store in console.log\nwindow.store = store;\n\nReactDOM.render(\n    <Provider store={store}>\n        <CookiesProvider>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </CookiesProvider>\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}